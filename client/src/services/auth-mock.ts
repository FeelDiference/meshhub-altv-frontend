// Mock –≤–µ—Ä—Å–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–æ–≥–¥–∞ backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)

import type { User, LoginRequest, LoginResponse } from '@/types/auth'

// Mock –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const MOCK_USER: User = {
  id: 'demo-user-123',
  username: 'demo@1win.pro',
  email: 'demo@1win.pro',
  department: 'IT',
  position: 'Developer',
  avatar: '',
}

// Mock —Ç–æ–∫–µ–Ω
const MOCK_TOKEN = 'mock-jwt-token-for-demo-purposes'

/**
 * Mock –≤–µ—Ä—Å–∏—è –ª–æ–≥–∏–Ω–∞
 */
export async function mockLogin(credentials: LoginRequest): Promise<LoginResponse> {
  // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
  await new Promise(resolve => setTimeout(resolve, 1000))

  // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
  if (!credentials.username.endsWith('@1win.pro')) {
    throw new Error('Email –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ user@1win.pro')
  }

  if (credentials.password.length < 6) {
    throw new Error('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤')
  }

  // –°–∏–º—É–ª—è—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –æ—à–∏–±–∫–∏ (10% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)
  if (Math.random() < 0.1) {
    throw new Error('–í—Ä–µ–º–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
  }

  return {
    success: true,
    token: MOCK_TOKEN,
    user: {
      ...MOCK_USER,
      username: credentials.username,
      email: credentials.username,
    }
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ backend
 */
export async function checkBackendAvailability(): Promise<boolean> {
  // –í dev —Ä–µ–∂–∏–º–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –∏–∑-–∑–∞ CORS
  // –í —Ä–µ–∞–ª—å–Ω–æ–º ALT:V WebView CORS –Ω–µ –±—É–¥–µ—Ç –ø—Ä–æ–±–ª–µ–º–æ–π
  if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {
    console.log('üåê –ó–∞–ø—É—Å–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ (localhost) - –∏—Å–ø–æ–ª—å–∑—É–µ–º mock –∏–∑-–∑–∞ CORS –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π')
    return false
  }

  try {
    // –í production –∏–ª–∏ ALT:V –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É backend
    const controller = new AbortController()
    const timeoutId = setTimeout(() => controller.abort(), 3000)
    
    const response = await fetch('https://hub.feeld.space/api/health', {
      method: 'GET',
      signal: controller.signal,
    })
    
    clearTimeout(timeoutId)
    return response.ok
  } catch (error) {
    console.log('üîß Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ CORS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º mock')
    return false
  }
}
