// –ü—Ä–æ—Å—Ç–∞—è –∏ –ª–æ–≥–∏—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

import axios, { AxiosResponse } from 'axios'
import type { User, LoginRequest, LoginResponse, SessionData } from '@/types/auth'
import { SessionCrypto } from '@/utils/crypto'
import { checkBackendAvailability } from './auth-mock'
import { API_CONFIG } from '@/config/api'

// –¢–∏–ø—ã –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç backend
interface BackendLoginResponse {
  access_token: string
  expires_in: number
  user: {
    id: string
    email: string
    first_name: string
    last_name: string
    is_admin: boolean
    is_super_admin?: boolean
    [key: string]: any
  }
}

// –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π axios –∫–ª–∏–µ–Ω—Ç –±–µ–∑ interceptor'–æ–≤ –¥–ª—è auth –∑–∞–ø—Ä–æ—Å–æ–≤
const authClient = axios.create({
  baseURL: API_CONFIG.baseUrl,
  timeout: 10000,
  headers: {
    'Content-Type': 'application/json',
  },
})

// –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–æ—Å—Ç—ã–º interceptor'–æ–º
const apiClient = axios.create({
  baseURL: API_CONFIG.baseUrl,
  timeout: 10000,
  headers: {
    'Content-Type': 'application/json',
  },
})

// –ü–†–û–°–¢–û–ô interceptor - —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–∫–µ–Ω, –±–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ refresh
apiClient.interceptors.request.use((config) => {
  const token = getAccessToken()
  if (token) {
    config.headers.Authorization = `Bearer ${token}`
  }
  return config
})

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–µ—Å—Ç–∞—Ö
export { apiClient, authClient }

/**
 * –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø
 */
export async function login(credentials: LoginRequest): Promise<LoginResponse> {
  console.log('üö™ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...')

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend'–∞
  const backendAvailable = await checkBackendAvailability()
  
  if (backendAvailable) {
    // –†–ï–ê–õ–¨–ù–ê–Ø –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ backend
    console.log('üì° –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ MeshHub Backend...')
    
    try {
      const response: AxiosResponse<BackendLoginResponse> = await authClient.post(
        API_CONFIG.endpoints.login,
        credentials
      )

      console.log('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ backend')
      console.log('üìã Response data:', response.data)
      
      const { access_token, user: backendUser } = response.data
      
      // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥ frontend —Ç–∏–ø—ã
      const user = {
        id: backendUser.id,
        username: backendUser.email, // –ò—Å–ø–æ–ª—å–∑—É–µ–º email –∫–∞–∫ username
        email: backendUser.email,
        department: 'IT', // –í—Ä–µ–º–µ–Ω–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        position: backendUser.is_super_admin ? 'Super Admin' : backendUser.is_admin ? 'Admin' : 'User',
        avatar: '',
      }
      
      const sessionData: SessionData = {
        userId: user.id,
        token: access_token,
        expiresAt: Date.now() + (24 * 60 * 60 * 1000), // 24 —á–∞—Å–∞
      }

      saveSession(sessionData)
      saveUser(user)

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ ALT:V LocalStorage –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç—å—é
      console.log('üíæ Checking window.alt availability...')
      console.log('üíæ window object exists:', !!window)
      console.log('üíæ window.alt exists:', !!(window as any).alt)
      console.log('üíæ window.alt type:', typeof (window as any).alt)
      console.log('üíæ window.alt object:', (window as any).alt)

      // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ window.alt —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if ((window as any).alt) {
        console.log('üíæ Attempting to save session to ALT:V LocalStorage...')
        console.log('üíæ Token to save:', access_token.substring(0, 20) + '...')
        console.log('üíæ User data:', user)
        console.log('üíæ Expires at:', new Date(sessionData.expiresAt))

        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É window.alt
          const altObj = (window as any).alt
          console.log('üíæ ALT object methods:', Object.getOwnPropertyNames(altObj))

          if (altObj.emit) {
            altObj.emit('auth:save-token', {
              token: access_token,
              user: user,
              expiresAt: sessionData.expiresAt
            })
            console.log('üíæ Event auth:save-token emitted to ALT:V')
          } else {
            console.log('üíæ No emit method on alt object')
          }
        } catch (error) {
          console.error('üíæ Error emitting auth:save-token event:', error)
        }
      } else {
        console.log('‚ö†Ô∏è window.alt not available - cannot save token to ALT:V')
        console.log('‚ö†Ô∏è Available window properties:', Object.keys(window))
      }

      window.dispatchEvent(new CustomEvent('auth:backend-success'))
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
      return {
        success: true,
        token: access_token,
        user: user,
      }
      
    } catch (error: any) {
      console.error('‚ùå Backend –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:', error.message)
      
      if (error.response?.status === 401) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
      } else if (error.response?.status === 403) {
        throw new Error('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω')
      } else if (error.response?.status >= 500) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
      } else if (error.code === 'ECONNABORTED' || error.code === 'ERR_NETWORK') {
        throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.')
      } else {
        throw new Error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É')
      }
    }
    
  } else {
    // Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –æ—Ç–∫–ª–æ–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.')
  }
}

/**
 * –û–ë–ù–û–í–õ–ï–ù–ò–ï –¢–û–ö–ï–ù–ê (—Ç–æ–ª—å–∫–æ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é)
 */
export async function refreshToken(): Promise<void> {
  console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...')

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ —Å–µ—Å—Å–∏—è
  const session = getSession()
  if (!session) {
    throw new Error('No session to refresh')
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å backend'–∞
  const backendAvailable = await checkBackendAvailability()
  
  if (!backendAvailable) {
    throw new Error('–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω.')
  }

  try {
    const response = await authClient.post(API_CONFIG.endpoints.refresh, {
      refreshToken: session.token // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω –∫–∞–∫ refresh
    })

    const { token, user } = response.data
    const sessionData: SessionData = {
      userId: user.id,
      token,
      expiresAt: Date.now() + (24 * 60 * 60 * 1000), // 24 —á–∞—Å–∞
    }

    saveSession(sessionData)
    saveUser(user)
    
    console.log('‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω')
    
  } catch (error) {
    console.error('‚ùå Refresh —Ç–æ–∫–µ–Ω–∞ –Ω–µ —É–¥–∞–ª—Å—è:', error)
    // –ü—Ä–∏ –æ—à–∏–±–∫–µ refresh - —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await logout()
    throw error
  }
}

/**
 * –í–´–•–û–î –ò–ó –°–ò–°–¢–ï–ú–´ (–ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π)
 */
export async function logout(): Promise<void> {
  console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã...')

  // JWT —Ç–æ–∫–µ–Ω—ã stateless - logout —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
  // –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
  console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...')

  // –í–°–ï–ì–î–ê –æ—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  clearSession()
  window.dispatchEvent(new CustomEvent('auth:logout'))
  
  console.log('‚úÖ Logout –∑–∞–≤–µ—Ä—à–µ–Ω')
}

/**
 * –ü–†–û–í–ï–†–ö–ê –í–ê–õ–ò–î–ù–û–°–¢–ò –¢–û–ö–ï–ù–ê
 */
export function isTokenValid(): boolean {
  const session = getSession()
  if (!session) return false
  
  // –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞
  
  // –í —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
  return session.expiresAt > Date.now()
}

/**
 * –ü–û–õ–£–ß–ò–¢–¨ –¢–û–ö–ï–ù –î–û–°–¢–£–ü–ê
 */
export function getAccessToken(): string | null {
  const session = getSession()
  return session && isTokenValid() ? session.token : null
}

/**
 * –ü–†–û–í–ï–†–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
 */
export function isAuthenticated(): boolean {
  const session = getSession()
  const user = getUser()
  return !!(session && user && isTokenValid())
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ALT:V
 */
function isAltVEnvironment(): boolean {
  return typeof (window as any).alt !== 'undefined'
}

/**
 * –°–û–•–†–ê–ù–ï–ù–ò–ï –°–ï–°–°–ò–ò (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ)
 */
function saveSession(sessionData: SessionData): void {
  try {
    if (isAltVEnvironment()) {
      // –í ALT:V - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é —á–∞—Å—Ç—å
      console.log('üíæ Saving session via ALT:V LocalStorage...')
      console.log('üíæ Token to save:', sessionData.token.substring(0, 20) + '...')
      console.log('üíæ User data:', getUser())
      console.log('üíæ Expires at:', new Date(sessionData.expiresAt))

      ;(window as any).alt.emit('auth:save-token', {
        token: sessionData.token,
        user: getUser(),
        expiresAt: sessionData.expiresAt
      })
      console.log('üíæ Event auth:save-token emitted to ALT:V')
    } else {
      // –í –±—Ä–∞—É–∑–µ—Ä–µ - fallback –∫ localStorage
      console.log('üíæ ALT:V not available, using localStorage fallback')
      const encryptedData = SessionCrypto.encrypt(JSON.stringify(sessionData))
      localStorage.setItem('auth_session', encryptedData)
    }
  } catch (error) {
    console.error('Failed to save session:', error)
  }
}

/**
 * –ü–û–õ–£–ß–ï–ù–ò–ï –°–ï–°–°–ò–ò (—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞)
 */
function getSession(): SessionData | null {
  try {
    if (isAltVEnvironment()) {
      // –í ALT:V - —Å–µ—Å—Å–∏—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –∫–ª–∏–µ–Ω—Ç–∞
      console.log('üîç Checking for ALT:V session...')

      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è)
      const tempSession = (window as any).__altv_temp_session
      if (tempSession) {
        console.log('‚úÖ Found temp session:', tempSession)
        return tempSession
      }

      // –ï—Å–ª–∏ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É ALT:V –∫–ª–∏–µ–Ω—Ç–∞
      console.log('üîç No temp session, requesting from ALT:V...')
      ;(window as any).alt.emit('auth:request-token')

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, —Å–µ—Å—Å–∏—è –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
      return null
    } else {
      // –í –±—Ä–∞—É–∑–µ—Ä–µ - –∏–∑ localStorage
      console.log('üíª Browser environment, using localStorage')
      const encryptedData = localStorage.getItem('auth_session')
      if (!encryptedData) return null

      const decryptedData = SessionCrypto.decrypt(encryptedData)
      return JSON.parse(decryptedData)
    }
  } catch (error) {
    console.error('Failed to get session:', error)
    return null
  }
}

/**
 * –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ò –ü–û–õ–£–ß–ï–ù–ò–Ø –°–ï–°–°–ò–ò –î–õ–Ø –û–¢–õ–ê–î–ö–ò
 */
export { getSession }

/**
 * –û–ß–ò–°–¢–ö–ê –°–ï–°–°–ò–ò
 */
function clearSession(): void {
  if (isAltVEnvironment()) {
    console.log('üóëÔ∏è Clearing session via ALT:V...')
    ;(window as any).alt.emit('auth:logout')
  } else {
    console.log('üóëÔ∏è Clearing localStorage session...')
    localStorage.removeItem('auth_session')
    localStorage.removeItem('auth_user')
  }
}

/**
 * –°–û–•–†–ê–ù–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
 */
function saveUser(user: User): void {
  try {
    localStorage.setItem('auth_user', JSON.stringify(user))
  } catch (error) {
    console.error('Failed to save user:', error)
  }
}

/**
 * –ü–û–õ–£–ß–ï–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
 */
export function getUser(): User | null {
  try {
    if (isAltVEnvironment()) {
      // –í ALT:V –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ temp storage –∏–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω —É –∫–ª–∏–µ–Ω—Ç–∞
      const tempSession = (window as any).__altv_temp_session
      if (tempSession && tempSession.user) {
        return tempSession.user
      }

      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –∫–ª–∏–µ–Ω—Ç–∞
      ;(window as any).alt.emit('auth:request-token')
      return null
    } else {
      // –í –±—Ä–∞—É–∑–µ—Ä–µ - –∏–∑ localStorage
      const userData = localStorage.getItem('auth_user')
      return userData ? JSON.parse(userData) : null
    }
  } catch (error) {
    console.error('Failed to get user:', error)
    return null
  }
}

/**
 * –ù–ê–°–¢–†–û–ô–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –°–û–ë–´–¢–ò–ô –î–õ–Ø ALT:V
 */
export function setupAltVAuthHandlers(): void {
  if (!isAltVEnvironment()) return

  console.log('üéÆ Setting up ALT:V auth event handlers...')

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
  ;(window as any).alt.on('auth:restore-session', (data: any) => {
    console.log('‚úÖ Restoring session from ALT:V LocalStorage:', data)

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è getSession()
    ;(window as any).__altv_temp_session = {
      userId: data.user?.id,
      token: data.token,
      expiresAt: data.expiresAt,
      user: data.user // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ temp session
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage (–¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)
    if (data.user) {
      localStorage.setItem('auth_user', JSON.stringify(data.user))
    }

    console.log('üîÑ Temp session set:', (window as any).__altv_temp_session)

    // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
    window.dispatchEvent(new CustomEvent('auth:restored'))
  })

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–µ—Å—Å–∏–∏
  ;(window as any).alt.on('auth:no-session', () => {
    console.log('‚ÑπÔ∏è No stored session in ALT:V LocalStorage')
    ;(window as any).__altv_temp_session = null
  })

  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  console.log('üîê Requesting stored token from ALT:V...')
  ;(window as any).alt.emit('auth:request-token')
}

console.log('üîê Auth service loaded - simple & clean version')